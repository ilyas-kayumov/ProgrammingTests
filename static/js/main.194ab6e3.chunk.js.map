{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","json","currentQuestion","correctAnswers","currentCorrect","renderQuestion","i","checkedAnswer","Array","from","document","getElementsByName","find","r","checked","undefined","value","tests","questions","length","infoBar","props","class","title","question","answers","map","answer","type","name","correct","href","onClick","testIndex","getQuestion","ReactDOM","render","renderTests","getElementById","test","getTests","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.194ab6e3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nlet json = {\n  \"tests\":\n    [\n      {\n        \"title\": \"Объявление и инициализация переменных\",\n        \"questions\":\n          [\n            {\n              \"question\": \"Выберите правильное объявление переменной x:\",\n              \"answers\":\n                [\n                  \"x = 0;\",\n                  \"{x};\",\n                  \"int x;\",\n                  \"x;\"\n                ],\n              \"correct\": 2\n            },\n            {\n              \"question\": \"Какой вариант правильно объявляет и иницилизирует переменную x?\",\n              \"answers\":\n                [\n                  \"int x = 0;\",\n                  \"int x => 0;\",\n                  \"int x(0);\",\n                  \"int x { 0 };\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"В каком варианте имя переменной не вызывает ошибку компиляции?\",\n              \"answers\":\n                [\n                  \"int var;\",\n                  \"int 1var;\",\n                  \"int var$;\",\n                  \"int @var;\"\n                ],\n              \"correct\": 3\n            },\n            {\n              \"question\": \"Какой вариант правильно объявляет и иницилизирует переменные x, y, z?\",\n              \"answers\":\n                [\n                  \"int x = 0, int y = 0, int z = 0;\",\n                  \"int x = 0, y = 0, z = 0;\",\n                  \"int x, int y, int z = 0;\",\n                  \"int x, y, z = { 0, 0, 0 };\"\n                ],\n              \"correct\": 1\n            },\n            {\n              \"question\": \"В каком варианте ключевое слово var использовано верно?\",\n              \"answers\":\n                [\n                  \"var x = 0;\",\n                  \"var x;\",\n                  \"var x, y;\",\n                  \"var x = 0, y = 0;\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"Какой вариант правильно объявляет и иницилизирует переменные x, y?\",\n              \"answers\":\n                [\n                  \"int x = 0; int y = x;\",\n                  \"int x = 0; int y = y;\",\n                  \"int x = 0, int y = y;\",\n                  \"int x = 0, y = x;\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"В каком варианте имя переменной не вызывает ошибку компиляции?\",\n              \"answers\":\n                [\n                  \"int _a1;\",\n                  \"int 1a_;\",\n                  \"int _a$;\",\n                  \"int $a;\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"Какой вариант правильно объявляет и иницилизирует переменные x, y, z?\",\n              \"answers\":\n                [\n                  \"int x = 0; int y = x; int z = y;\",\n                  \"int x = y; int y = x; int z = 0;\",\n                  \"int x = z; int y = x; int z = 0;\",\n                  \"int x = z; int y = 0; int z = x;\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"Какое значение в результате получит x? int x = default(int);\",\n              \"answers\":\n                [\n                  \"0\",\n                  \"1\",\n                  \"2 147 483 647\",\n                  \"-2 147 483 648\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"Какое значение в результате получит z? int x = 0; int y = x; x = 1; int z = y;\",\n              \"answers\":\n                [\n                  \"0\",\n                  \"1\",\n                  \"2 147 483 647\",\n                  \"-2 147 483 648\"\n                ],\n              \"correct\": 0\n            }\n          ]\n      },\n      {\n        \"title\": \"Арифметические операции\",\n        \"questions\":\n          [\n            {\n              \"question\": \"Какой вариант правильно находит cумму x, y и присваивает результат z?\",\n              \"answers\":\n                [\n                  \"z = +(x  y);\",\n                  \"z = (x, y)+;\",\n                  \"z = x + y;\",\n                  \"z = { x + y };\"\n                ],\n              \"correct\": 2\n            },\n            {\n              \"question\": \"Какой знак соответсвует операции деления?\",\n              \"answers\":\n                [\n                  \"\\\\\",\n                  \"|\",\n                  \":\",\n                  \"/\",\n                ],\n              \"correct\": 3\n            },\n            {\n              \"question\": \"Какой вариант правильно находит квадрат числа x и записывает результат в x?\",\n              \"answers\":\n                [\n                  \"x = x * x;\",\n                  \"x = x ^ 2;\",\n                  \"x = x . x;\",\n                  \"x = x ' 2;\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"В каком случае x меняет знак переменной?\",\n              \"answers\":\n                [\n                  \"x--;\",\n                  \"x = -x;\",\n                  \"x -= x;\",\n                  \"x =- x;\"\n                ],\n              \"correct\": 1\n            },\n            {\n              \"question\": \"Какой знак соответсвует операции взятия остатка от деления?\",\n              \"answers\":\n                [\n                  \"%\",\n                  \"~\",\n                  \"&\",\n                  \"^\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"В каком случае переменная x увеличивается на 1?\",\n              \"answers\":\n                [\n                  \"x++;\",\n                  \"x += x + 1;\",\n                  \"x += (x + 1);\",\n                  \"x *= 1;\"\n                ],\n              \"correct\": 0\n            },\n            {\n              \"question\": \"В каком случае значение переменной x не меняется?\",\n              \"answers\":\n                [\n                  \"x = x - x - x;\",\n                  \"x = x + x + x;\",\n                  \"x = x + x - x;\",\n                  \"x = (-x) - x - x;\"\n                ],\n              \"correct\": 2\n            },\n            {\n              \"question\": \"Какое значения в результате принимает x? int x = 8 % 2;\",\n              \"answers\":\n                [\n                  \"1\",\n                  \"2\",\n                  \"0\",\n                  \"4\"\n                ],\n              \"correct\": 2\n            },\n            {\n              \"question\": \"Какое значения в результате принимает x? int x = 5 / 2;\",\n              \"answers\":\n                [\n                  \"3\",\n                  \"2.5\",\n                  \"1\",\n                  \"2\"\n                ],\n              \"correct\": 3\n            }\n          ]\n      }\n    ]\n};\n\nfunction getInfoBar(props) {\n  return (\n    <div>\n      <p><a class=\"testTitle\">{props.title}</a> | Вопрос: {currentQuestion + 1}/{props.questions.length}</p>\n      <hr />\n    </div>\n  );\n}\n\nfunction getTests(props) {\n  currentQuestion = 0;\n  correctAnswers = 0;\n  const tests = props.tests.map((test, i) => <li><a class=\"testTitle\" href=\"#\" onClick={() => renderQuestion(i)}>{test.title}</a></li>);\n  return (\n    <div>\n      <h1><a class=\"title\" href=\"#\" onClick={renderTests}><p class=\"title1\">ТРЕНИРОВОЧНЫЕ ТЕСТЫ</p><p class=\"title2\">ПО ПРОГРАММИРОВАНИЮ</p></a></h1>\n      <hr></hr>\n      <h2>\n        Тесты по C#:\n    </h2>\n      <ol>\n        {tests}\n      </ol>\n    </div>\n  );\n}\n\nlet currentQuestion = 0;\nlet correctAnswers = 0;\nlet currentCorrect = 0;\n\nfunction getQuestion(props) {\n  const answers = props.question.answers.map((answer, i) => <p><input type=\"radio\" name=\"answer\" value={i} />{answer}</p>);\n  currentCorrect = props.question.correct;\n  return (\n    <form>\n      <p>{props.question.question}</p>\n      {answers}\n      <hr />\n      <a class=\"next\" href=\"#\" onClick={() => renderQuestion(props.testIndex)}>Далее</a>\n    </form>\n  );\n}\n\nfunction renderQuestion(i) {\n  if (currentQuestion > 0) {\n    const checkedAnswer = Array.from(document.getElementsByName(\"answer\")).find(r => r.checked);\n\n    if (checkedAnswer == undefined) {\n      return;\n    }\n\n    let correct = checkedAnswer.value == currentCorrect;\n    if (correct) {\n      correctAnswers++;\n    }\n    checkedAnswer.checked = false;\n  }\n\n  if (currentQuestion < json.tests[i].questions.length) {\n\n    let infoBar = getInfoBar(json.tests[i]);\n    let question = getQuestion({ question: json.tests[i].questions[currentQuestion], testIndex: i });\n    ReactDOM.render(\n      <div>\n        <h1><a class=\"title\" href=\"#\" onClick={renderTests}><p class=\"title1\">ТРЕНИРОВОЧНЫЕ ТЕСТЫ</p><p class=\"title2\">ПО ПРОГРАММИРОВАНИЮ</p></a></h1><hr></hr>\n        {infoBar}{question}\n      </div>,\n      document.getElementById('root')\n    );\n    currentQuestion++;\n  }\n  else {\n    ReactDOM.render(\n      <div>Результат: {correctAnswers} / {json.tests[i].questions.length} </div>,\n      document.getElementById('root')\n    );\n  }\n}\n\nfunction renderTests() {\n  let tests = getTests(json);\n\n  ReactDOM.render(\n    tests,\n    document.getElementById('root')\n  );\n}\nrenderTests();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}